[
    {
        "id": "17f328fd3cc5f057",
        "type": "tab",
        "label": "Docker Stats",
        "disabled": false,
        "info": ""
    },
    {
        "id": "aada41424af4f201",
        "type": "tab",
        "label": "Ex",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "01250f521875b5f7",
        "type": "tab",
        "label": "Create Flows from Active Containers",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5098bf90dbba1fe0",
        "type": "influxdb",
        "hostname": "influx",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "influxdb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influx:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "eeb221fb.ab27f",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "test",
        "name": "test",
        "usetls": true,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "4324fabbef4bc4d5",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "test 1.8 flux",
        "usetls": false,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "1.8-flux",
        "url": "https://localhost:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "571a2d2a.81415c",
        "type": "mqtt-broker",
        "name": "localhost",
        "broker": "192.168.1.68",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "120",
        "cleansession": true,
        "birthTopic": "sensors/connected/test-client",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "1",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "sensors/connected/test-client",
        "willQos": "0",
        "willRetain": "true",
        "willPayload": "0"
    },
    {
        "id": "6ca8bde.9eb2f44",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "https",
        "database": "new_db",
        "name": "",
        "usetls": true,
        "tls": "f7f39f4e.896ae",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "f7f39f4e.896ae",
        "type": "tls-config",
        "name": "local-tls",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "verifyservercert": false
    },
    {
        "id": "e3fc6628635cdb05",
        "type": "inject",
        "z": "17f328fd3cc5f057",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "43d9c2724cab10d3"
            ]
        ]
    },
    {
        "id": "e9c53ab3f943ade1",
        "type": "debug",
        "z": "17f328fd3cc5f057",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 160,
        "wires": []
    },
    {
        "id": "43d9c2724cab10d3",
        "type": "http request",
        "z": "17f328fd3cc5f057",
        "name": "docker stats",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.122.118:2375/containers/influx/stats?stream",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "2d0c626ad863dcba",
                "c7811f2fa72ea08f"
            ]
        ]
    },
    {
        "id": "c7811f2fa72ea08f",
        "type": "function",
        "z": "17f328fd3cc5f057",
        "name": "Calculate metrics",
        "func": "var p = msg.payload;\nmsg.payload = [\n    {\n        measurement: msg.payload.name,\n        fields: {\n            used_memory: (p.memory_stats.usage - p.memory_stats.stats.cache),\n            avaible_memory: p.memory_stats.limit,\n            memory_usage_percent: (p.memory_stats.usage - p.memory_stats.stats.cache) / (p.memory_stats.limit) * 100.0 ,\n            cpu_delta: (p.cpu_stats.cpu_usage.total_usage - p.precpu_stats.cpu_usage.total_usage),\n            system_cpu_delta: (p.cpu_stats.system_cpu_usage - p.precpu_stats.system_cpu_usage),\n            number_cpus: p.cpu_stats.online_cpus,\n            cpu_usage_percent: ((p.cpu_stats.cpu_usage.total_usage - p.precpu_stats.cpu_usage.total_usage) / (p.cpu_stats.system_cpu_usage - p.precpu_stats.system_cpu_usage) * p.cpu_stats.online_cpus * 100.0),\n            pids: p.pids_stats.current,\n            net_io_rxbytes: (p.networks.eth0.rx_bytes + p.networks.eth1.rx_bytes),\n            net_io_txbytes: (p.networks.eth0.tx_bytes + p.networks.eth1.tx_bytes),\n            block_io_readbytes: p.blkio_stats.io_service_bytes_recursive[0].value,\n            block_io_writebytes: p.blkio_stats.io_service_bytes_recursive[1].value\n        }\n    }   \n]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 160,
        "wires": [
            [
                "e9c53ab3f943ade1",
                "c0c03b8367bfac77"
            ]
        ]
    },
    {
        "id": "c0c03b8367bfac77",
        "type": "influxdb batch",
        "z": "17f328fd3cc5f057",
        "influxdb": "5098bf90dbba1fe0",
        "precision": "",
        "retentionPolicy": "",
        "name": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "UFRGS",
        "bucket": "database",
        "x": 1080,
        "y": 240,
        "wires": []
    },
    {
        "id": "2d0c626ad863dcba",
        "type": "debug",
        "z": "17f328fd3cc5f057",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 100,
        "wires": []
    },
    {
        "id": "4a271a88.499184",
        "type": "function",
        "z": "aada41424af4f201",
        "name": "multiple measurement points",
        "func": "msg.payload = [\n    {\n        measurement: \"weather_sensor\",\n        fields: {\n            temp: 5.5,\n            light: 678,\n            humidity: 51\n        },\n        tags:{\n            location:\"garden\"\n        },\n        timestamp: new Date()\n    },\n    {\n        measurement: \"alarm_sensor\",\n        fields: {\n            proximity: 999,\n            temp: 19.5\n        },\n        tags:{\n            location:\"home\"\n        },\n        timestamp: new Date()\n    }\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 180,
        "wires": [
            [
                "eca41ce21970ef15",
                "748a06bd.675ed8"
            ]
        ]
    },
    {
        "id": "6493a442.1cdcbc",
        "type": "inject",
        "z": "aada41424af4f201",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "4a271a88.499184"
            ]
        ]
    },
    {
        "id": "748a06bd.675ed8",
        "type": "influxdb batch",
        "z": "aada41424af4f201",
        "influxdb": "5098bf90dbba1fe0",
        "precision": "",
        "retentionPolicy": "",
        "name": "",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "UFRGS",
        "bucket": "database",
        "x": 700,
        "y": 120,
        "wires": []
    },
    {
        "id": "eca41ce21970ef15",
        "type": "debug",
        "z": "aada41424af4f201",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 340,
        "wires": []
    },
    {
        "id": "6a608e0ff7188660",
        "type": "debug",
        "z": "aada41424af4f201",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 300,
        "wires": []
    },
    {
        "id": "4c6158f08324fab5",
        "type": "inject",
        "z": "aada41424af4f201",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1100,
        "y": 280,
        "wires": [
            [
                "2362d8590f586407"
            ]
        ]
    },
    {
        "id": "2362d8590f586407",
        "type": "http request",
        "z": "aada41424af4f201",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.122.118:2375/containers/mynodered/stats",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "6a608e0ff7188660"
            ]
        ]
    },
    {
        "id": "a46c4e25e8891f60",
        "type": "inject",
        "z": "aada41424af4f201",
        "name": "make request",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1110,
        "y": 160,
        "wires": [
            [
                "446562a43a36c827"
            ]
        ]
    },
    {
        "id": "446562a43a36c827",
        "type": "http request",
        "z": "aada41424af4f201",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://nodered.org",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1274.5,
        "y": 160,
        "wires": [
            [
                "e4679a338f99f626",
                "247623340e66e53f"
            ]
        ]
    },
    {
        "id": "0bd88407f593a2c3",
        "type": "debug",
        "z": "aada41424af4f201",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1850,
        "y": 160,
        "wires": []
    },
    {
        "id": "e4679a338f99f626",
        "type": "html",
        "z": "aada41424af4f201",
        "name": "",
        "property": "",
        "outproperty": "",
        "tag": ".node-red-latest-version",
        "ret": "text",
        "as": "single",
        "x": 1570,
        "y": 160,
        "wires": [
            [
                "0bd88407f593a2c3"
            ]
        ]
    },
    {
        "id": "247623340e66e53f",
        "type": "debug",
        "z": "aada41424af4f201",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 40,
        "wires": []
    },
    {
        "id": "4fc98bf98b76dafc",
        "type": "inject",
        "z": "aada41424af4f201",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 16 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "It is 4pm on a weekday!",
        "payloadType": "str",
        "x": 1170,
        "y": 460,
        "wires": [
            [
                "a347ba79a0185dfb"
            ]
        ]
    },
    {
        "id": "a347ba79a0185dfb",
        "type": "debug",
        "z": "aada41424af4f201",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1390,
        "y": 460,
        "wires": []
    },
    {
        "id": "ead86e19f8b1af23",
        "type": "http in",
        "z": "aada41424af4f201",
        "name": "",
        "url": "/hello",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1120,
        "y": 560,
        "wires": [
            [
                "a4fe01068703f720"
            ]
        ]
    },
    {
        "id": "a4fe01068703f720",
        "type": "template",
        "z": "aada41424af4f201",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Hello World!</h1>\n    </body>\n</html>",
        "x": 1270,
        "y": 560,
        "wires": [
            [
                "c627464b60fb7087"
            ]
        ]
    },
    {
        "id": "c627464b60fb7087",
        "type": "http response",
        "z": "aada41424af4f201",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1410,
        "y": 560,
        "wires": []
    },
    {
        "id": "b36aa30.3a7276",
        "type": "http request",
        "z": "01250f521875b5f7",
        "name": "GET Running Containers",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.122.118:2375/containers/json?status=running",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "e86aa30808485571",
                "50c874339ec84c2d"
            ]
        ]
    },
    {
        "id": "11167f67.5d5031",
        "type": "inject",
        "z": "01250f521875b5f7",
        "name": "Create Flows From Active Containers",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "b36aa30.3a7276"
            ]
        ]
    },
    {
        "id": "94c03205e95753d2",
        "type": "http request",
        "z": "01250f521875b5f7",
        "name": "GET JSON Docker Stats",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.122.118:1880/flow/17f328fd3cc5f057",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "863a480a6aa3c753",
                "50c874339ec84c2d"
            ]
        ]
    },
    {
        "id": "e86aa30808485571",
        "type": "function",
        "z": "01250f521875b5f7",
        "name": "Name of Running Containers",
        "func": "var p = msg.payload;\nvar containersName = new Array(p.length);\nfor (var i = 0; i < p.length ; i ++){\n    containersName[i] = p[i].Names[0];\n}\nmsg.containerName = containersName;\nmsg.count = p.length;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "94c03205e95753d2"
            ]
        ]
    },
    {
        "id": "3b06faf82dae5751",
        "type": "function",
        "z": "01250f521875b5f7",
        "name": "Set New Flow",
        "func": "if (msg.loop.index != msg.count){\n    msg.payload.id = Math.random();\n    for (var i = 0; i < msg.payload.nodes.length; i++){\n        if (msg.loop.index == 0){\n            msg.payload.nodes[i].id = msg.payload.nodes[i].id+\"-\"+msg.loop.index;\n        }else{\n            msg.payload.nodes[i].id = msg.payload.nodes[i].id.replace(/.$/, msg.loop.index);\n        }\n        var lengthWires = msg.payload.nodes[i].wires.length;\n        for (var j = 0; j < lengthWires; j++){\n            var lengthArray = msg.payload.nodes[i].wires[j].length;\n            for (var k = 0; k < lengthArray; k++){\n                if (msg.loop.index == 0){\n                    msg.payload.nodes[i].wires[j][k] = msg.payload.nodes[i].wires[j][k]+\"-\"+msg.loop.index;\n                }else{\n                    msg.payload.nodes[i].wires[j][k] = msg.payload.nodes[i].wires[j][k].replace(/.$/, msg.loop.index);\n                }\n            }\n        }\n    }\n    msg.payload.label = msg.containerName[msg.loop.index]; //contabilizar index 0\n    var containerName = msg.containerName[msg.loop.index]; //contabilizar index 0  \n    msg.payload.nodes[2].url = \"http://192.168.122.118:2375/containers\"+containerName+\"/stats?stream\"; // o indexador 2 é para pegar o nó de http request e trocar a url\n    msg.url = \"http://192.168.122.118:1880/flow\"\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 420,
        "wires": [
            [
                "863a480a6aa3c753",
                "a4fb49eee28f63be",
                "78972d1116adb1d8"
            ]
        ]
    },
    {
        "id": "78972d1116adb1d8",
        "type": "http request",
        "z": "01250f521875b5f7",
        "name": "POST new flow",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 380,
        "y": 500,
        "wires": [
            [
                "41af39d4e0555052"
            ]
        ]
    },
    {
        "id": "41af39d4e0555052",
        "type": "debug",
        "z": "01250f521875b5f7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 500,
        "wires": []
    },
    {
        "id": "863a480a6aa3c753",
        "type": "loop",
        "z": "01250f521875b5f7",
        "name": "",
        "kind": "fcnt",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-keep",
        "finalPayload": "final-last",
        "x": 390,
        "y": 340,
        "wires": [
            [],
            [
                "3b06faf82dae5751"
            ]
        ]
    },
    {
        "id": "b80a79ea6449ca72",
        "type": "http request",
        "z": "01250f521875b5f7",
        "name": "GET Running Containers",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.122.118:2375/containers/json?status=running",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "801f4b0c85967a7d"
            ]
        ]
    },
    {
        "id": "76c1c08e727e8391",
        "type": "inject",
        "z": "01250f521875b5f7",
        "name": "Delete Flows",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 850,
        "y": 80,
        "wires": [
            [
                "b80a79ea6449ca72"
            ]
        ]
    },
    {
        "id": "f5b9ecb42708cf00",
        "type": "http request",
        "z": "01250f521875b5f7",
        "name": "GET JSON Docker Stats",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.122.118:1880/flows",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "050dcfdfe3131bd7",
                "2046da8850e0ce79"
            ]
        ]
    },
    {
        "id": "801f4b0c85967a7d",
        "type": "function",
        "z": "01250f521875b5f7",
        "name": "Name of Running Containers",
        "func": "var p = msg.payload;\nvar containersName = new Array(p.length);\nfor (var i = 0; i < p.length ; i ++){\n    containersName[i] = p[i].Names[0];\n}\nmsg.containerName = containersName;\nmsg.count = p.length;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 140,
        "wires": [
            [
                "f5b9ecb42708cf00"
            ]
        ]
    },
    {
        "id": "9c21d0eca0023c77",
        "type": "function",
        "z": "01250f521875b5f7",
        "name": "Set New Flow",
        "func": "msg.teste = msg.payload.length;\nfor (var i = 0; i < msg.payload.length; i++){\n    if (msg.containerName[msg.loop.index] == msg.payload[i].label){\n        var id = msg.payload[i].id;\n        msg.url = \"http://192.168.122.118:1880/flow/\"+id;\n        return msg;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 340,
        "wires": [
            [
                "050dcfdfe3131bd7",
                "e4e2957983426306"
            ]
        ]
    },
    {
        "id": "e4e2957983426306",
        "type": "http request",
        "z": "01250f521875b5f7",
        "name": "DELET containers flows",
        "method": "DELETE",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1130,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "050dcfdfe3131bd7",
        "type": "loop",
        "z": "01250f521875b5f7",
        "name": "",
        "kind": "fcnt",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-keep",
        "finalPayload": "final-last",
        "x": 1110,
        "y": 260,
        "wires": [
            [],
            [
                "9c21d0eca0023c77"
            ]
        ]
    },
    {
        "id": "a4fb49eee28f63be",
        "type": "debug",
        "z": "01250f521875b5f7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 420,
        "wires": []
    },
    {
        "id": "50c874339ec84c2d",
        "type": "debug",
        "z": "01250f521875b5f7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 220,
        "wires": []
    },
    {
        "id": "2046da8850e0ce79",
        "type": "debug",
        "z": "01250f521875b5f7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 220,
        "wires": []
    }
]